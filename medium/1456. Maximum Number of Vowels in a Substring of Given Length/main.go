package main

import (

)

func maxVowels(s string, k int) int {
	vowels := map[byte]bool{
		'a': true,
		'e': true,
		'i': true,
		'o': true,
		'u': true,
	}
	maxVowels := 0
	for i := 0; i < k; i++ {
		if vowels[s[i]] {
			maxVowels++
		}
	}
	currentVowels := maxVowels
	for i := k; i < len(s); i++ {
		if vowels[s[i]] {
			currentVowels++
		}
		if vowels[s[i-k]] {
			currentVowels--
		}
		maxVowels = max(maxVowels, currentVowels)
	}
	return maxVowels
}

// Алгоритм
// Инициализируйте vowelsкак хэш-таблицу, содержащую гласные буквы.
// Инициализируйте maxVowelsкак 0.
// Посчитайте количество гласных букв в первых kсимволах строки s.
// Пройдитесь по всем символам строки sначиная с k-го символа:
// Если текущий символ является гласной буквой:
// Увеличьте текущее количество гласных букв на 1.
// Если символ, который мы удаляем, является гласной буквой:
// Уменьшите текущее количество гласных букв на 1.
// Обновите максимальное количество гласных букв.
// Верните maxVowels.
// Сложность:
// Время: O(n)
// Где n - это длина строки s.
// Мы проходим по строке s только один раз.
// Пространство: O(1)
// Мы используем константное количество дополнительной памяти.